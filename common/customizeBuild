#!/bin/bash
## PLEASE READ:
## THIS FILE IS NOT TO BE RUN BY HUMAN
## One alters this so that it runs in the cron scripts. 

cat << EOF > mangoes-$architecture/debconf.set
console-common console-data/keymap/policy select Select keymap from full list
console-common console-data/keymap/full select us
EOF


dpkg-divert --add --local --divert /usr/sbin/invoke-rc.d.chroot --rename /usr/sbin/invoke-rc.d
cp /bin/true /usr/sbin/invoke-rc.d
echo -e "#!/bin/sh\nexit 101" > /usr/sbin/policy-rc.d
chmod +x /usr/sbin/policy-rc.d

sed -i -e 's/KERNEL\!=\"eth\*|/KERNEL\!=\"/' /lib/udev/rules.d/75-persistent-net-generator.rules
rm -f /etc/udev/rules.d/70-persistent-net.rules
rm -f /usr/sbin/policy-rc.d
rm -f /usr/sbin/invoke-rc.d
dpkg-divert --remove --rename /usr/sbin/invoke-rc.d


# Add the user mango and make the password for root and mango "mango" 
add_mango_user(){
  adduser --disabled-password --gecos "" mango
  echo "mango:mango" | chpasswd
  echo "root:mango" | chpasswd
}

# Add the user mango to all the groups
add_mango_user_to_groups() {
  groupadd -f -r input
  for GRP in adm cdrom audio sudo video games plugdev; 
  do
    adduser mango $GRP
  done
}

add_mango_user
add_mango_user_to_groups

apt-get update
apt-get --yes --force-yes install $packages

debconf-set-selections /debconf.set
rm -f /debconf.set

addColortoBashRC(){
  sed -i "s|#force_color_prompt=yes|force_color_prompt=yes|g" /home/mango/.bashrc
  cat /home/mango/.bashrc > /root/.bashrc
}

addColortoBashRC

add_mango_to_opt(){
mkdir -p /opt/mango
  cd /opt/mango
  wget http://infiniteautomation.com/latest.zip
  unzip -o *.zip
  rm *.zip
  cd ../
  mkdir -p /opt/mango/overrides/properties/
  cp  mango/classes/env.properties mango/overrides/properties/env.properties
  sed -i "s|web.port=8080|web.port=80|g" mango/overrides/properties/env.properties
  chown -R mango:mango /opt/mango/
  chmod 755 /opt/mango
  echo "Changing Permissions"
  find /opt/mango/ -type d -exec chmod 755 {} \;
  find /opt/mango/ -type f -exec chmod 644 {} \;
  find /opt/mango/ -name "*.sh" -exec chmod u+x {} \;
  find /opt/mango/ -name "*.bat" -exec chmod u+x {} \;
}

add_mango_to_opt

touch /etc/init.d/mango
## all the init scripts

cat << EOF > /etc/motd
###################
Welcome to Mango ES
###################

Have Fun With Your Data !

##################
One-On-One Support
##################
If you need one-on-one or immediate support, you can contact us directly. For larger inquiries, professional service and
support are available to be purchased. You can also contact us with application questions, licensing questions or to talk
with us about opportunities you may have to distribute Mango products.
##################
Contact Us
##################
Call +1(303) 558-7112
EOF


cat << EOF > /etc/init.d/mango
#!/bin/sh
# chkconfig: 235 99 10
# description: Start or stop the Mango Automation
#
### BEGIN INIT INFO
# Provides: mango
# Required-Start: $network $syslog
# Required-Stop: $network
# Default-Start: 2 3 5
# Default-Stop: 0 1 6
# Description: Start or stop the Mango Automation
### END INIT INFO

start="/opt/mango/bin/ma.sh start"
stop="/opt/mango/bin/ma.sh stop"
lockfile=/var/lock/subsys/mango
name='Mango'

case "$1" in
'start')
        $start>/dev/null 2>&1 </dev/null
        RETVAL=$?
        if [ "$RETVAL" = "0" ]; then
                touch $lockfile>/dev/null 2>&1
        fi
        ;;
'stop')
        $stop
        RETVAL=$?
        if [ "$RETVAL" = "0" ]; then
                rm -f $lockfile
        fi
        ;;
'status')
        status Mango
        ;;
'restart'|'reload'|'condrestart')
        $stop ; $start
        RETVAL=$?
        ;;
*)
        echo "Usage: sudo service  { start | stop | restart | reload | condrestart}"
        RETVAL=1
        ;;
esac
exit $RETVAL
EOF


cat << EOF > /etc/init.d/framebuffer-start
#!/bin/bash
### BEGIN INIT INFO
# Provides:          framebuffer-start
# Required-Start:    mountkernfs
# Required-Stop:
# Default-Start:     S
# Default-Stop:
# Short-Description: Initializes console output over HDMI
### END INIT INFO

. /lib/lsb/init-functions

case "$1" in
    start)
    log_action_begin_msg "Enable console output over HDMI"
    echo "0" > /sys/devices/platform/mesonfb/graphics/fb1/blank
    log_action_end_msg 0
    ;;

    *)
    echo "Usage: /etc/init.d/$0 start"
    exit 1

esac
EOF



cat << EOF > /etc/init.d/usbmount-start
### BEGIN INIT INFO
# Provides:          usbmount-start
# Required-Start:    udev $local_fs
# Required-Stop:
# Default-Start:     S
# Default-Stop:
# Short-Description: Automatically mount USB drives after a cold start
### END INIT INFO

## This script mounts all partitions of USB drives which
## have already been recognized by the kernel AND by udevd,
## but are not yet mounted.

## install with update-rc.d usbmount-start start 99 S

. /lib/lsb/init-functions

. /etc/usbmount/usbmount.conf

create_mountpoints() {
  for i in $MOUNTPOINTS ; do
    if [ ! -d "$i" ]; then
      if [ ! -e /media/usb ]; then
        ln -s "$i" /media/usb
      fi
      mkdir -p "$i"
    fi
  done
}

case "$1" in
    start)
    log_action_begin_msg "Coldplugging usbmount devices"
    create_mountpoints
    failed=""
    if ! udevadm trigger --action=add --sysname-match='sd*'; then
       failed="sd*"
    fi
    if ! udevadm trigger --action=add --sysname-match='ub*'; then
       failed="${failed} ub*"
    fi

    if [ "x${failed}" = "x" ]; then
       log_action_end_msg 0
    else
       log_action_end_msg 1 "${failed## }"
    fi
    ;;
    *)
    echo "Usage: /etc/init.d/$0 start"
    exit 1

esac
EOF

chmod u+x /etc/init.d/mango
chmod u+x /etc/init.d/usbmount-start
chmod u+x /etc/init.d/framebuffer-start


cd - 
#insserv usbmount-start
#insserv framebuffer-start

echo "America/Denver" > /etc/timezone

rm -f /third-stage
